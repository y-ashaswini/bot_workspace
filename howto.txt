# create package

> directory_name
>> src
>>> package_name

# write command + list dependenies
catkin_create_pkg std_msgs roscpp

# edit package.xml, CMakeLists.txt

> package_name
>> src
>>> file_one.cpp
>>> file_two.cpp
>> msgs
>>> message_name.msg

----------------------------------------------------------------

# Run robot with presaved configurations in rviz and gazebo

source /devel/setup.bash
roscore

roslauch fourbot world.launch
# launches both rviz and gaezbo (how to reopen saved rviz config)

rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=/fourbot/cmd_vel
# control on robot movement on gazebo


# Topics published 

MISC
/clicked_point
/clock

CAMERA
/fourbot/camera/parameter_descriptions
/fourbot/camera/parameter_updates
/fourbot/camera/rgb/camera_info
/fourbot/camera/rgb/image_raw
/fourbot/camera/rgb/image_raw/compressed
/fourbot/camera/rgb/image_raw/compressed/parameter_descriptions
/fourbot/camera/rgb/image_raw/compressed/parameter_updates
/fourbot/camera/rgb/image_raw/compressedDepth
/fourbot/camera/rgb/image_raw/compressedDepth/parameter_descriptions
/fourbot/camera/rgb/image_raw/compressedDepth/parameter_updates
/fourbot/camera/rgb/image_raw/theora
/fourbot/camera/rgb/image_raw/theora/parameter_descriptions
/fourbot/camera/rgb/image_raw/theora/parameter_updates

GAZEBO
/gazebo/link_states
/gazebo/model_states
/gazebo/parameter_descriptions
/gazebo/parameter_updates
/gazebo/performance_metrics
/gazebo/set_link_state
/gazebo/set_model_state

ODOM
/fourbot/cmd_vel
/fourbot/odom
/initialpose
/joint_states
/move_base_simple/goal
/imu ------------------

/rosout
/rosout_agg
/tf
/tf_static




roslaunch vision color_detection_publisher.launch
rostopic list (you'll see webcam)
rostopic info /webcam (you'll see Image type, etc.)
rqt_image_view (switch to topic /webcam)



To add a plugin:
1) Add plugin code to packagename.gazebo within the <gazebo></gazebo> tags 
2) add link + joint to packagename.xacro [include it in the structure]

After adding depth sensor, topics published:

/depthcam/color/camera_info
/depthcam/color/image_raw ------------------
/depthcam/color/image_raw/compressed
/depthcam/color/image_raw/compressed/parameter_descriptions
/depthcam/color/image_raw/compressed/parameter_updates
/depthcam/color/image_raw/compressedDepth
/depthcam/color/image_raw/compressedDepth/parameter_descriptions
/depthcam/color/image_raw/compressedDepth/parameter_updates
/depthcam/color/image_raw/theora
/depthcam/color/image_raw/theora/parameter_descriptions
/depthcam/color/image_raw/theora/parameter_updates
/depthcam/depth/camera_info
/depthcam/depth/image_raw
/depthcam/depth/points ------------------
/depthcam_ir/depth/camera_info
/depthcam_ir/parameter_descriptions
/depthcam_ir/parameter_updates


SCRIPTS TO RUN FOR TRAVERSAL

>>> roslaunch fourbot rviz_gazebo.launch
>>> rosrun vision depth_node.py (depthcam/color/distance_opencv -- publishes distance from center of camera frame )
>>> rosrun vision fake_arrow.py -- detects arrow and publishes direction (hard coded currently)
>>> rosrun fourbot movement_depth.py -- moves forward, turns anticlockwise 30 deg (default) if distance < 1.8 units



ODOM
/fourbot/odom
/fourbot/imu
/fourbot/gps

Sample Data >

header: 
  seq: 21549
  stamp: 
    secs: 2240
    nsecs: 575000000
  frame_id: "odom"
child_frame_id: "robot_footprint"
pose: 
  pose: 
    position: 
      x: -3.603781907032657
      y: -8.712173282306216
      z: 0.0
    orientation: 
      x: -3.9998267267744516e-07
      y: 1.0721680793585594e-08
      z: 0.9798848351509343
      w: 0.1995637989242201
  covariance: [0.0001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01]
twist: 
  twist: 
    linear: 
      x: -2.2812691466686442e-08
      y: 4.320901034244061e-11
      z: 0.0
    angular: 
      x: 0.0
      y: 0.0
      z: -1.972875243643067e-11
  covariance: [0.0001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000000000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01]
---




THE ROVER MODEL IN CODE (AS SAVED IN GAZEBO WORLD CONFIGURATION)

<model name='fourbot'>
      <link name='robot_footprint'>
        <inertial>
          <pose>0.001722 0 0 0 -0 0</pose>
          <mass>15.1</mass>
          <inertia>
            <ixx>0.147119</ixx>
            <ixy>0</ixy>
            <ixz>-3.96556e-07</ixz>
            <iyy>0.341669</iyy>
            <iyz>0</iyz>
            <izz>0.404552</izz>
          </inertia>
        </inertial>
        <collision name='robot_footprint_fixed_joint_lump__collision_collision'>
          <pose>0 0 0.05 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.5 0.5 0.2</size>
            </box>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <collision name='robot_footprint_fixed_joint_lump__camera_collision_1'>
          <pose>0.26 0 0 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.05 0.05 0.05</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='robot_footprint_fixed_joint_lump__depthcam_collision_2'>
          <pose>0.2 0 0.2 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='robot_footprint_fixed_joint_lump__chassis_visual_visual'>
          <pose>0 0 0.05 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.5 0.5 0.2</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Blue</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <visual name='robot_footprint_fixed_joint_lump__camera_visual_1'>
          <pose>0.26 0 0 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.05 0.05 0.05</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <visual name='robot_footprint_fixed_joint_lump__depthcam_visual_2'>
          <pose>0.2 0 0.2 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <sensor name='depthcam_camera' type='depth'>
          <update_rate>20</update_rate>
          <camera>
            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.05</near>
              <far>3</far>
            </clip>
          </camera>
          <plugin name='depthcam_controller' filename='libgazebo_ros_openni_kinect.so'>
            <baseline>0.2</baseline>
            <alwaysOn>1</alwaysOn>
            <updateRate>1.0</updateRate>
            <cameraName>depthcam_ir</cameraName>
            <imageTopicName>/depthcam/color/image_raw</imageTopicName>
            <cameraInfoTopicName>/depthcam/color/camera_info</cameraInfoTopicName>
            <depthImageTopicName>/depthcam/depth/image_raw</depthImageTopicName>
            <depthImageInfoTopicName>/depthcam/depth/camera_info</depthImageInfoTopicName>
            <pointCloudTopicName>/depthcam/depth/points</pointCloudTopicName>
            <frameName>depthcam</frameName>
            <pointCloudCutoff>0.5</pointCloudCutoff>
            <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
            <distortionK1>0.00000001</distortionK1>
            <distortionK2>0.00000001</distortionK2>
            <distortionK3>0.00000001</distortionK3>
            <distortionT1>0.00000001</distortionT1>
            <distortionT2>0.00000001</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
            <robotNamespace>/</robotNamespace>
          </plugin>
          <pose>0.2 0 0.2 0 -0 0</pose>
        </sensor>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='left_wheel_hinge_back' type='revolute'>
        <pose relative_to='robot_footprint'>-0.2 0.3 0 0 -0 0</pose>
        <parent>robot_footprint</parent>
        <child>left_wheel_back</child>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <effort>10000</effort>
            <velocity>1000</velocity>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <damping>1</damping>
            <friction>1</friction>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>
      <link name='left_wheel_back'>
        <pose relative_to='left_wheel_hinge_back'>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 -0 1.5707 1.5707</pose>
          <mass>5</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='left_wheel_back_collision'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode>
                <kp>1e+06</kp>
                <kd>100</kd>
                <max_vel>1</max_vel>
                <min_depth>0</min_depth>
              </ode>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='left_wheel_back_visual'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='left_wheel_hinge_front' type='revolute'>
        <pose relative_to='robot_footprint'>0.2 0.3 0 0 -0 0</pose>
        <parent>robot_footprint</parent>
        <child>left_wheel_front</child>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <effort>10000</effort>
            <velocity>1000</velocity>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <damping>1</damping>
            <friction>1</friction>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>
      <link name='left_wheel_front'>
        <pose relative_to='left_wheel_hinge_front'>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 -0 1.5707 1.5707</pose>
          <mass>5</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='left_wheel_front_collision'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode>
                <kp>1e+06</kp>
                <kd>100</kd>
                <max_vel>1</max_vel>
                <min_depth>0</min_depth>
              </ode>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='left_wheel_front_visual'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='right_wheel_hinge_back' type='revolute'>
        <pose relative_to='robot_footprint'>-0.2 -0.3 0 0 -0 0</pose>
        <parent>robot_footprint</parent>
        <child>right_wheel_back</child>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <effort>10000</effort>
            <velocity>1000</velocity>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <damping>1</damping>
            <friction>1</friction>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>
      <link name='right_wheel_back'>
        <pose relative_to='right_wheel_hinge_back'>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 -0 1.5707 1.5707</pose>
          <mass>5</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='right_wheel_back_collision'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode>
                <kp>1e+06</kp>
                <kd>100</kd>
                <max_vel>1</max_vel>
                <min_depth>0</min_depth>
              </ode>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='right_wheel_back_visual'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='right_wheel_hinge_front' type='revolute'>
        <pose relative_to='robot_footprint'>0.2 -0.3 0 0 -0 0</pose>
        <parent>robot_footprint</parent>
        <child>right_wheel_front</child>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <effort>10000</effort>
            <velocity>1000</velocity>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <damping>1</damping>
            <friction>1</friction>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>
      <link name='right_wheel_front'>
        <pose relative_to='right_wheel_hinge_front'>0 0 0 0 -0 0</pose>
        <inertial>
          <pose>0 0 0 -0 1.5707 1.5707</pose>
          <mass>5</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='right_wheel_front_collision'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode>
                <kp>1e+06</kp>
                <kd>100</kd>
                <max_vel>1</max_vel>
                <min_depth>0</min_depth>
              </ode>
            </contact>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='right_wheel_front_visual'>
          <pose>0 0 0 1.57089 1.57079 -3.14159</pose>
          <geometry>
            <cylinder>
              <length>0.05</length>
              <radius>0.1</radius>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <plugin name='skid_steer_drive_controller' filename='libgazebo_ros_skid_steer_drive.so'>
        <updateRate>10.0</updateRate>
        <robotNamespace>/fourbot</robotNamespace>
        <leftFrontJoint>left_wheel_hinge_front</leftFrontJoint>
        <rightFrontJoint>right_wheel_hinge_front</rightFrontJoint>
        <leftRearJoint>left_wheel_hinge_back</leftRearJoint>
        <rightRearJoint>right_wheel_hinge_back</rightRearJoint>
        <wheelSeparation>0.4</wheelSeparation>
        <wheelDiameter>0.2</wheelDiameter>
        <robotBaseFrame>robot_footprint</robotBaseFrame>
        <torque>10</torque>
        <topicName>cmd_vel</topicName>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <commandTopic>cmd_vel</commandTopic>
        <topic_name_twist>cmd_vel</topic_name_twist>
        <topic_name_odometry>odom</topic_name_odometry>
        <topic_name_joint>joint</topic_name_joint>
        <broadcastTF>1</broadcastTF>
        <covariance_x>0.0001</covariance_x>
        <covariance_y>0.0001</covariance_y>
        <covariance_yaw>0.01</covariance_yaw>
      </plugin>
      <static>0</static>
      <plugin name='imu_plugin' filename='libgazebo_ros_imu.so'>
        <alwaysOn>1</alwaysOn>
        <bodyName>robot_footprint</bodyName>
        <topicName>imu</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRate>20.0</updateRate>
        <robotNamespace>/</robotNamespace>
      </plugin>
      <pose>0 0 0 0 -0 0</pose>
</model>



----------------------------------------------------------------

https://prabhjotkaurgosal.com/a-guide-to-implementing-ros-navigation-stack-on-your-robot/4/

GMAPPING (creating and saving a map)

roslaunch fourbot temp.launch
roslaunch fourbot gmapping_launch.launch (maps)
(on terminal) rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=/fourbot/cmd_vel
> go around the place, map it out, save, relaunch world, launch amcl node (haven't created one here yet), travel, etc.


